name: Flutter CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # B∆∞·ªõc 1: L·∫•y m√£ ngu·ªìn
      - name: üì• Checkout code
        uses: actions/checkout@v4

      # B∆∞·ªõc 2: C√†i Flutter
      - name: üîß Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.3'
          channel: 'stable'

      # B∆∞·ªõc 3: Ki·ªÉm tra phi√™n b·∫£n Flutter
      - name: üîç Check Flutter version
        run: flutter --version

      # B∆∞·ªõc 4: C√†i dependencies
      - name: üì¶ Install dependencies
        run: flutter pub get
        env:
          PUB_CACHE: /home/runner/.pub-cache

      # B∆∞·ªõc 5: Ki·ªÉm tra ƒë·ªãnh d·∫°ng m√£ (tu·ª≥ ch·ªçn)
      # - name: üìê Format check
      #   run: flutter format --set-exit-if-changed .

      # B∆∞·ªõc 6: Ph√¢n t√≠ch m√£ ngu·ªìn - ch·ªâ fail n·∫øu c√≥ l·ªói th·ª±c s·ª±
      - name: üîé Analyze Dart code (fail only on errors)
        run: |
          flutter analyze > analyze.log
          cat analyze.log
          if grep -q "error ‚Ä¢" analyze.log; then
            echo "‚ùå C√≥ l·ªói nghi√™m tr·ªçng (error) trong flutter analyze"
            exit 1
          else
            echo "‚úÖ Kh√¥ng c√≥ l·ªói nghi√™m tr·ªçng"
          fi

      # B∆∞·ªõc 7: Ch·∫°y test - kh√¥ng ch·∫∑n build n·∫øu l·ªói
      #- name: ‚úÖ Run tests (kh√¥ng ch·∫∑n build n·∫øu fail)
      #  run: |
      #    if flutter test; then
      #     echo "‚úÖ Tests passed"
       #   else
      #      echo "‚ö†Ô∏è Tests failed ‚Äî nh∆∞ng kh√¥ng ch·∫∑n CI"
      #    fi
